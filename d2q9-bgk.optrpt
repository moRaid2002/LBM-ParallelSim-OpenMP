Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: main(int, char **)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (main(int, char **)) [1] d2q9-bgk.c(133,1)
  -> INLINE: (147,5) usage(const char *)
  -> (159,3) initialise(const char *, const char *, t_param *, t_speed **, t_speed **, int **, float **)
  -> INLINE: (167,5) timestep(const t_param, t_speed *__restrict__, t_speed *__restrict__, int *__restrict__, float *__restrict__, const int)
    -> INLINE: (203,3) accelerate_flow(const t_param, t_speed *__restrict__, int *__restrict__)
    -> (204,24) collision(const t_param, t_speed *__restrict__, t_speed *__restrict__, int *__restrict__)
  -> INLINE: (168,5) timestep(const t_param, t_speed *__restrict__, t_speed *__restrict__, int *__restrict__, float *__restrict__, const int)
    -> INLINE: (203,3) accelerate_flow(const t_param, t_speed *__restrict__, int *__restrict__)
    -> (204,24) collision(const t_param, t_speed *__restrict__, t_speed *__restrict__, int *__restrict__)
  -> INLINE: (190,41) calc_reynolds(const t_param, t_speed *, int *)
    -> INLINE: (679,10) av_velocity(const t_param, t_speed *, int *)
  -> (195,3) write_values(const t_param, t_speed *, int *, float *)
  -> INLINE: (196,3) finalise(const t_param *, t_speed **, t_speed **, int **, float **)


    Report from: OpenMP optimizations [openmp]

OpenMP Construct at d2q9-bgk.c(430,1) inlined into d2q9-bgk.c(190,41)
remark #16201: OpenMP DEFINED REGION WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(166,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at d2q9-bgk.c(225,3) inlined into d2q9-bgk.c(167,5)
      remark #15301: SIMD LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(225,3) inlined into d2q9-bgk.c(168,5)
      remark #15301: SIMD LOOP WAS VECTORIZED
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(430,1) inlined into d2q9-bgk.c(190,41)
   remark #25084: Preprocess Loopnests: Moving Out Store    [ d2q9-bgk.c(469,9) ]
   remark #25084: Preprocess Loopnests: Moving Out Store    [ d2q9-bgk.c(471,11) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(223:28)::main:  Assume directive not useful: removing

d2q9-bgk.c(167,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(204,24):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(168,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(204,24):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(190,41):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(679,10):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(195,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(133,1):remark #34051: REGISTER ALLOCATION : [main] d2q9-bgk.c:133

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     441
            Global    :     104
            Local     :     337
        Regenerable   :     117
        Spilled       :      20
        
    Routine stack
        Variables     :     256 bytes*
            Reads     :      58 [1.30e+01 ~ 13.0%]
            Writes    :      31 [5.33e+00 ~ 5.3%]
        Spills        :     200 bytes*
            Reads     :      35 [3.03e+00 ~ 3.0%]
            Writes    :      30 [2.32e+00 ~ 2.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: collision(const t_param, t_speed *__restrict__, t_speed *__restrict__, int *__restrict__)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (collision(const t_param, t_speed *__restrict__, t_speed *__restrict__, int *__restrict__)) [2] d2q9-bgk.c(246,121)


    Report from: OpenMP optimizations [openmp]

OpenMP Construct at d2q9-bgk.c(256,1)
remark #16201: OpenMP DEFINED REGION WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(257,3)
   remark #25261: Invariant Condition eliminated(Proven True) at line 285
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at d2q9-bgk.c(278,5)
   <Peeled loop for vectorization, Predicate Optimized v1>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(278,5)
   <Predicate Optimized v1>
      remark #25084: Preprocess Loopnests: Moving Out Store    [ d2q9-bgk.c(400,9) ]
      remark #25084: Preprocess Loopnests: Moving Out Store    [ d2q9-bgk.c(402,9) ]
      remark #25422: Invariant Condition at line 284 hoisted out of this loop
      remark #15301: SIMD LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(278,5)
   <Remainder loop for vectorization, Predicate Optimized v1>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(278,5)
   <Peeled loop for vectorization, Predicate Optimized v2>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(278,5)
   <Predicate Optimized v2>
      remark #15301: SIMD LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(278,5)
   <Remainder loop for vectorization, Predicate Optimized v2>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(246,121):remark #34051: REGISTER ALLOCATION : [collision] d2q9-bgk.c:246

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :    1260
            Global    :     362
            Local     :     898
        Regenerable   :     115
        Spilled       :     214
        
    Routine stack
        Variables     :      88 bytes*
            Reads     :      10 [2.71e-02 ~ 0.0%]
            Writes    :      18 [2.83e-01 ~ 0.3%]
        Spills        :    3224 bytes*
            Reads     :     426 [1.75e+01 ~ 17.5%]
            Writes    :     264 [8.68e+00 ~ 8.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: write_values(const t_param, t_speed *, int *, float *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (write_values(const t_param, t_speed *, int *, float *)) [3] d2q9-bgk.c(703,1)
  -> INLINE: (716,5) die(const char *, const int, const char *)
  -> INLINE: (771,5) die(const char *, const int, const char *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(719,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between cells->speed_1 (728:9) and call:fprintf(FILE *__restrict__, const char *__restrict__, ...) (761:7)

   LOOP BEGIN at d2q9-bgk.c(720,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between cells->speed_1 (728:9) and call:fprintf(FILE *__restrict__, const char *__restrict__, ...) (761:7)
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(774,3)
   remark #15527: loop was not vectorized: function call to fprintf(FILE *__restrict__, const char *__restrict__, ...) cannot be vectorized   [ d2q9-bgk.c(776,5) ]
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(703,1):remark #34051: REGISTER ALLOCATION : [write_values] d2q9-bgk.c:703

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     157
            Global    :      37
            Local     :     120
        Regenerable   :      45
        Spilled       :      12
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      56 bytes*
            Reads     :       8 [5.43e+00 ~ 5.4%]
            Writes    :       7 [1.19e+00 ~ 1.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: timestep(const t_param, t_speed *__restrict__, t_speed *__restrict__, int *__restrict__, float *__restrict__, const int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (timestep(const t_param, t_speed *__restrict__, t_speed *__restrict__, int *__restrict__, float *__restrict__, const int)) [4] d2q9-bgk.c(202,1)
  -> INLINE: (203,3) accelerate_flow(const t_param, t_speed *__restrict__, int *__restrict__)
  -> (204,24) collision(const t_param, t_speed *__restrict__, t_speed *__restrict__, int *__restrict__)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(225,3) inlined into d2q9-bgk.c(203,3)
   remark #15301: SIMD LOOP WAS VECTORIZED
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(204,24):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(202,1):remark #34051: REGISTER ALLOCATION : [timestep] d2q9-bgk.c:202

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :      93
            Global    :      36
            Local     :      57
        Regenerable   :      11
        Spilled       :       7
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       1 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: accelerate_flow(const t_param, t_speed *__restrict__, int *__restrict__)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (accelerate_flow(const t_param, t_speed *__restrict__, int *__restrict__)) [5] d2q9-bgk.c(208,93)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(225,3)
   remark #15301: SIMD LOOP WAS VECTORIZED
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(208,93):remark #34051: REGISTER ALLOCATION : [accelerate_flow] d2q9-bgk.c:208

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   26[ rax rdx rcx rsi rdi r8-r11 r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :      77
            Global    :      30
            Local     :      47
        Regenerable   :       8
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       1 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: av_velocity(const t_param, t_speed *, int *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (av_velocity(const t_param, t_speed *, int *)) [6] d2q9-bgk.c(421,1)


    Report from: OpenMP optimizations [openmp]

OpenMP Construct at d2q9-bgk.c(430,1)
remark #16201: OpenMP DEFINED REGION WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(430,1)
   remark #25084: Preprocess Loopnests: Moving Out Store    [ d2q9-bgk.c(469,9) ]
   remark #25084: Preprocess Loopnests: Moving Out Store    [ d2q9-bgk.c(471,11) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(421,1):remark #34051: REGISTER ALLOCATION : [av_velocity] d2q9-bgk.c:421

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     175
            Global    :      27
            Local     :     148
        Regenerable   :      55
        Spilled       :       2
        
    Routine stack
        Variables     :      64 bytes*
            Reads     :       6 [5.10e-01 ~ 0.5%]
            Writes    :       9 [2.55e+00 ~ 2.5%]
        Spills        :      64 bytes*
            Reads     :      14 [4.19e+00 ~ 4.2%]
            Writes    :      14 [3.57e+00 ~ 3.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: finalise(const t_param *, t_speed **, t_speed **, int **, float **)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (finalise(const t_param *, t_speed **, t_speed **, int **, float **)) [7] d2q9-bgk.c(655,1)


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(655,1):remark #34051: REGISTER ALLOCATION : [finalise] d2q9-bgk.c:655

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rbp rsi rdi r8 r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      10
            Local     :      14
        Regenerable   :       1
        Spilled       :       4
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: calc_reynolds(const t_param, t_speed *, int *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (calc_reynolds(const t_param, t_speed *, int *)) [8] d2q9-bgk.c(676,1)
  -> INLINE: (679,10) av_velocity(const t_param, t_speed *, int *)


    Report from: OpenMP optimizations [openmp]

OpenMP Construct at d2q9-bgk.c(430,1) inlined into d2q9-bgk.c(679,10)
remark #16201: OpenMP DEFINED REGION WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(430,1) inlined into d2q9-bgk.c(679,10)
   remark #25084: Preprocess Loopnests: Moving Out Store    [ d2q9-bgk.c(469,9) ]
   remark #25084: Preprocess Loopnests: Moving Out Store    [ d2q9-bgk.c(471,11) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(679,10):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(676,1):remark #34051: REGISTER ALLOCATION : [calc_reynolds] d2q9-bgk.c:676

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     185
            Global    :      30
            Local     :     155
        Regenerable   :      61
        Spilled       :       2
        
    Routine stack
        Variables     :      92 bytes*
            Reads     :       6 [4.81e-01 ~ 0.5%]
            Writes    :      12 [3.12e+00 ~ 3.1%]
        Spills        :      64 bytes*
            Reads     :      15 [3.24e+00 ~ 3.2%]
            Writes    :      14 [3.24e+00 ~ 3.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: total_density(const t_param, t_speed *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (total_density(const t_param, t_speed *)) [9] d2q9-bgk.c(682,59)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(685,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at d2q9-bgk.c(686,5)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(686,5)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(686,5)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(686,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(682,59):remark #34051: REGISTER ALLOCATION : [total_density] d2q9-bgk.c:682

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     171
            Global    :      63
            Local     :     108
        Regenerable   :       5
        Spilled       :      40
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :     312 bytes*
            Reads     :      65 [8.84e+00 ~ 8.8%]
            Writes    :      66 [7.85e+00 ~ 7.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: die(const char *, const int, const char *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (die(const char *, const int, const char *)) [10] d2q9-bgk.c(786,1)


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(786,1):remark #34051: REGISTER ALLOCATION : [die] d2q9-bgk.c:786

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rbx rsi rdi]
        
    Routine temporaries
        Total         :      28
            Global    :       1
            Local     :      27
        Regenerable   :       9
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: usage(const char *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (usage(const char *)) [11] d2q9-bgk.c(794,1)


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(794,1):remark #34051: REGISTER ALLOCATION : [usage] d2q9-bgk.c:794

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rsi rdi]
        
    Routine temporaries
        Total         :      15
            Global    :       0
            Local     :      15
        Regenerable   :       4
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: initialise(const char *, const char *, t_param *, t_speed **, t_speed **, int **, float **)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (initialise(const char *, const char *, t_param *, t_speed **, t_speed **, int **, float **)) [12] d2q9-bgk.c(483,1)
  -> INLINE: (496,5) die(const char *, const int, const char *)
  -> INLINE: (502,20) die(const char *, const int, const char *)
  -> INLINE: (506,20) die(const char *, const int, const char *)
  -> INLINE: (510,20) die(const char *, const int, const char *)
  -> INLINE: (514,20) die(const char *, const int, const char *)
  -> INLINE: (518,20) die(const char *, const int, const char *)
  -> INLINE: (522,20) die(const char *, const int, const char *)
  -> INLINE: (526,20) die(const char *, const int, const char *)
  -> INLINE: (553,27) die(const char *, const int, const char *)
  -> INLINE: (568,31) die(const char *, const int, const char *)
  -> INLINE: (584,31) die(const char *, const int, const char *)
  -> INLINE: (618,5) die(const char *, const int, const char *)
  -> INLINE: (627,22) die(const char *, const int, const char *)
  -> INLINE: (629,40) die(const char *, const int, const char *)
  -> INLINE: (631,40) die(const char *, const int, const char *)
  -> INLINE: (633,23) die(const char *, const int, const char *)


    Report from: OpenMP optimizations [openmp]

OpenMP Construct at d2q9-bgk.c(591,1)
remark #16201: OpenMP DEFINED REGION WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(624,3)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at d2q9-bgk.c(591,1)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between *cells_ptr->speed_0[ii+jj*params->nx] (596:9) and *cells_ptr->speed_8[ii+jj*params->nx] (606:9)
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(483,1):remark #34051: REGISTER ALLOCATION : [initialise] d2q9-bgk.c:483

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   19[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :     760
            Global    :     116
            Local     :     644
        Regenerable   :     307
        Spilled       :       6
        
    Routine stack
        Variables     :    1112 bytes*
            Reads     :      48 [6.96e+00 ~ 7.0%]
            Writes    :      11 [1.46e+00 ~ 1.5%]
        Spills        :      96 bytes*
            Reads     :      20 [1.54e+00 ~ 1.5%]
            Writes    :      18 [1.79e+00 ~ 1.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
